<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="turnserver_centos" xml:lang="en-us">
    <title>Installing a TURN Server</title>
<shortdesc>You can install and configure a TURN server to use with Sametime Meetings.</shortdesc>
    <taskbody>
<context>The following procedures uses Coturn and CentOS 7 to implement a TURN server.</context>
<steps>
<step>
                <cmd>Install the CentOS prerequisites.</cmd>
                <info>
                    <codeblock>sudo yum install -y make gcc cc gcc-c++ wget openssl-devel libevent libevent-devel
</codeblock>
                </info>
            </step>
<step>
<cmd>Download the Coturn source package that can be compiled from the <xref
href="https://github.com/coturn/coturn/wiki/Downloads" format="html" scope="external"
>Downloads</xref> repository. Ensure it is the latest version.</cmd>
<info>The following example is downloading
v4.5.2.<codeblock>mkdir /root/turn
cd /root/turn
wget https://coturn.net/turnserver/v4.5.2/turnserver-4.5.2.tar.gz
</codeblock></info>
</step>
<step>
<cmd>Compile and install.</cmd>
<info>
<codeblock>./configure --prefix=/usr/local/turnserver # Specify the installation directory
make
sudo make install
</codeblock>
</info>
</step>
<step>
<cmd>Set the environment variables.</cmd>
<info>
<codeblock>vim ~/.bashrc
</codeblock>
<p>Add the following statements.
<codeblock>export turnserver_home=/usr/local/turnserver
export PATH=$PATH:$turnserver_home/bin
</codeblock></p>
</info>
</step>
<step>
<cmd>Configure the TURN server.</cmd>
<info>Create the <filepath>turnserver.conf</filepath>
file.<codeblock>vim /etc/turnserver.conf
</codeblock><p>Add the following content to define the
Coturn server. Replace the option values with the appropriate values for your environment.
<codeblock>
# Listener IP address of relay server. Multiple listeners can be specified.
# If no IP(s) specified in the config file or in the command line options,
# then all IPv4 and IPv6 system IPs will be used for listening.
listening-ip=0.0.0.0

# External IP-Address of the TURN server
external-ip=IP_ADDRESS

# TURN listener port for UDP and TCP (Default: 3478).
listening-port=3478

# 443 for TURN over TLS, which can bypass firewalls
tls-listening-port=443

# host domain name.
realm=mycompany.org

# Path to the SSL certificate and private key.
# Certificate file.
cert=/usr/local/etc/turn_server_cert.pem

# Private key file.
pkey=/usr/local/etc/turn_server_pkey.pem

# Lower and upper bounds of the UDP relay endpoints:
# Further ports that are open for communication
min-port=10000
max-port=20000

# This allows TURN credentials to be accounted for a specific user id.
# If you don't have a suitable id, the timestamp alone can be used.
# This option is just turning on secret-based authentication.
# The actual value of the secret is defined by option static-auth-secret,
use-auth-secret

static-auth-secret=&lt;YOUR_SECRET>

# Option to set the log file name.
# By default, the turnserver tries to open a log file in
# /var/log, /var/tmp, /tmp and current directories directories
log-file=/var/log/turnserver.log

# Enable verbose logging
verbose

# Do not allow an TLS/DTLS version of protocol
no-tlsv1
no-tlsv1_1
no-tlsv1_2
</codeblock></p><p>You
can make additional customizations to the file. For additional information,  see the   <xref
href="https://github.com/coturn/coturn/blob/master/examples/etc/turnserver.conf" format="html"
scope="external">turnserver.conf</xref> file. Within the file, configuration options are described
as comments.</p></info>
</step>
<step>
<cmd>Start the service.</cmd>
<info>
<codeblock>turnserver -v -r extranet-ip:port -a -o -c /etc/turnserver.conf
</codeblock>
</info>
</step>
</steps></taskbody>
</task>
    
