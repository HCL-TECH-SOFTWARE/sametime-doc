<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="enable_video_bridge" xml:lang="en-us">
    <title>Enable Videobridge for TCP</title>
    <shortdesc>This section provides steps to configure TCP for media streams using TCP port
        4443.</shortdesc>
    <taskbody>
        <prereq id="prereq_djt_cjq_znb">
            <p>The following external port must be opened on a firewall. You can use any network
                command to verify. For example: <userinput>- netstat #4443/tcp</userinput> is used
                for Real-time Transport Protocol (RTP)  media over TCP.</p>
        </prereq>
        <context>Two types of communication can be configured: Transmission Control Protocol (TCP)
            and User Datagram Protocol (UDP). You can configure the video bridge for one or
            both.</context></taskbody>
    <task id="task_m5l_hfj_5tb">
        <title>Docker</title>
        <taskbody>
            <context>
                <p><i><b>Use these settings to allow both UDP and TCP.</b></i>
                </p>
                <p>The client tries UDP first and if it fails, TCP is used.</p>
                <ol id="ol_b2s_jfj_5tb">
                    <li> Open the .env file, look for “JVB_TCP_HARVESTER_DISABLED” configuration and
                        change the value to
                        <b>false</b>.<codeblock id="codeblock_c2s_jfj_5tb">JVB_TCP_HARVESTER_DISABLED=false</codeblock></li>
                    <li> In the .env file, locate the entry for JVB_TCP_PORT field. If the value has
                        a # in front, remove the comment # to enable the
                            setting.<codeblock id="codeblock_d2s_jfj_5tb">JVB_TCP_PORT=4443</codeblock><note
                            id="note_e2s_jfj_5tb">#JVB_TCP_PORT is TCP port for media used by Jitsi
                            Videobridge when the TCP Harvester is enabled.</note></li>
                    <li>Open the docker-compose.yaml. Add JVB_TCP_PORT section for the JVB
                        component:<codeblock id="codeblock_f2s_jfj_5tb"># Video bridge
jvb:
ports:
- '${JVB_PORT}:${JVB_PORT}/udp'
- '${JVB_TCP_PORT}:${JVB_TCP_PORT}'</codeblock></li>
                </ol>
                <p>With above configuration, A/V media successfully flows through 4443 media-port
                    and media-port state changes from Listening to Established</p>
                <p>
                    <codeblock id="codeblock_bnw_qfj_5tb">tcp6 0 475 a82b7a871950:4443 192.168.75.1:49295 ESTABLISHED</codeblock>
                </p>
                <p><b><i><b>Use these settings to force TCP only.</b></i></b></p>
                <p>If there is need to completely switch to the TCP protocol and remove support for
                    UDP, then complete the settings above, remove JVB_PORT in docker-compose.yaml
                    file and remove the entry from .env
                    file.<codeblock id="codeblock_cnw_qfj_5tb"># Video bridge
jvb:
ports:
#- '${JVB_PORT}:${JVB_PORT}/udp'
- '${JVB_TCP_PORT}:${JVB_TCP_PORT}'
</codeblock></p>
                <p>To enforce the changes made, follow the steps in <xref
                        href="apply_configchanges_docker.dita" scope="local" format="dita"/>.</p>
            </context>
        </taskbody>
    </task>
    <task id="task_gvf_gfj_5tb">
        <title>Kubernetes</title>
        <taskbody>
            <context>
                <p><i><b>Use these settings to allow both UDP and TCP.</b></i></p>
                <p>UDP will be attempted first and if it fails, then TCP will be used. If you need
                    to disable UDP entirely, UDP will need to be blocked at the network.</p>
                <ol id="ol_fps_5fj_5tb">
                    <li>Open the helm/charts/video/templates/deployment.yaml, add the following as
                        environment variables. Search for JVB_PORT to see where to insert
                        them:<codeblock id="codeblock_gps_5fj_5tb">- name: JVB_TCP_PORT
value: "4443"
- name: JVB_TCP_HARVESTER_DISABLED
value: "false"
</codeblock></li>
                </ol>
                <p>These steps are required for AWS EKS only. In
                    helm/charts/video/templates/deployment.yaml, find the lifecycle section. Below
                    it you will see a preStop: section. Insert the following as a sibling section to
                    preStop:<codeblock id="codeblock_hps_5fj_5tb">postStart:
exec:
command: ["/bin/sh", "-c", "echo 'org.ice4j.ice.harvest.ALLOWED_INTERFACES=eth0' >> /defaults/sip-communicator.properties"]
</codeblock></p>
                <p>Save the settings and redeploy using the steps in <xref
                        href="apply_configchanges_kubernetes.dita" scope="local" format="dita"
                    />.</p>
                <p>To update a live deployment, use the following
                    command:<codeblock id="codeblock_ips_5fj_5tb">kubectl set env deploy/video -e JVB_TCP_PORT=4443 -e JVB_TCP_HARVESTER_DISABLED=false</codeblock></p>
                <p>Use these commands to update a live deployment if you are deployed on
                    AWS:<codeblock id="codeblock_jps_5fj_5tb">kubectl patch deploy/video -p '{"spec":{"template":{"spec":{"containers":[{"name":"jvb","lifecycle":{"postStart":{"exec":{"command":["/bin/sh", "-c", "echo \"org.ice4j.ice.harvest.ALLOWED_INTERFACES=eth0\" >> /defaults/sip-communicator.properties"]}}}}]}}}}'</codeblock></p>
                <p><b>Use these steps to remove UDP port 30000 from AWS:</b></p>
                <ol id="ol_kps_5fj_5tb">
                    <li>Open the AWS Console and navigate to your EC2 Dashboard.</li>
                    <li>Click Security Groups.</li>
                    <li>Find the Security Group named eksctl-&lt;your cluster
                        name>-nodegroup-video/SG.</li>
                    <li>Locate port 30000 / UDP from the list and click the remove icon.</li>
                    <li>Click Save.</li>
                </ol>
            </context>
        </taskbody>
    </task>
</task>
    
