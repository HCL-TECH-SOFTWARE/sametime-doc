<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<reference id="admin_st_mng_remotesettings" xml:lang="en-us">
<title>Managed community settings</title>
<shortdesc>Define managed community settings in the <filepath>managed-community-configs.xml</filepath> file.</shortdesc>
<refbody>
<section>The <filepath>managed-community-configs.xml</filepath> file
uses these element types:<ul>
<li>Action elements specify what action to take: Add, Update, Delete,
or Reset. They are set as &lt;managed-community-action> elements.</li>
<li>Community elements specify the community attributes to which the
actions apply. They are set as &lt;managed-community> elements.</li>
</ul><p>Only define attributes that are mandatory. For example, do
not include the "loginAtStartup" attribute unless you want to prevent
your users from changing that setting. If the user's configuration
differs from any defined attribute, the user's configuration is updated.
Although you cannot lock the user interface, any settings that a user
changes during a session revert back at the next login.</p><p>The
following tables describe the attributes for each element. The required
attributes must be present in the file.</p><table><title>&lt;managed-community>
attributes</title>
<tgroup cols="3"><colspec colname="col1"/><colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row valign="bottom">
<entry colname="col1">Attribute</entry>
<entry colname="col2">Required?</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1">deleteOverlappingCommunities</entry>
<entry colname="col2">No</entry>
<entry colname="col3">Whether or not overlapping duplicate communities should be deleted. The
                default is "false". An overlapping community is one in which the community host and
                userid are the same. An overlapping duplicate community can occur when you use a
                  <filepath>managed-community-configs.xml</filepath> file to consolidate multiple
                hosts into a single community. The <tm tmtype="reg" trademark="Sametime"
                  >Sametime</tm> client may have a community for each host; updating each to the
                same new host name would result in duplicate overlapping communities. To ensure that
                duplicate overlapping communities are consolidated into one, set this attribute to
                true.</entry>
</row>
<row>
<entry colname="col1">id</entry>
<entry colname="col2">Yes</entry>
<entry colname="col3">The unique ID of the managed community. This
setting should be the same value as the "host" attribute.</entry>
</row>
<row>
<entry colname="col1">host</entry>
<entry colname="col2">Yes</entry>
<entry colname="col3">The host to manage. The client only updates
communities whose host matches the host of the managed community.</entry>
</row>
<row>
<entry colname="col1">newHost</entry>
<entry colname="col2">No</entry>
<entry colname="col3">Attribute used to update the host of a community
that matches the "host" attribute. This is the new host to connect
to. The attribute only applies to "update" type managed community
actions. The user's contact list is assumed to be valid for the new
community. If the contact list is not valid, use the "reset" managed
community action instead.</entry>
</row>
<row>
<entry colname="col1">name</entry>
<entry colname="col2">No</entry>
<entry colname="col3">The name of the community. Not recommended.
To set the community ID, use ST_COMMUNITY_ID in the server's sametime.ini
to set the community name for all clients.</entry><?Pub Caret 113?>
</row>
<row>
<entry colname="col1">savePassword</entry>
<entry colname="col2">No</entry>
<entry colname="col3">Whether or not to save the password. Set the
value to "true" to save the password.</entry>
</row>
<row>
<entry colname="col1">loginAtStartup</entry>
<entry colname="col2">No</entry>
<entry colname="col3">Whether or not to automatically log in. Set
the value to "true" to log in automatically.</entry>
</row>
<row>
<entry colname="col1">useGlobalConnContext</entry>
<entry colname="col2">No</entry>
<entry colname="col3">Whether or not to use the global connection
context. You must set this to "true" if you are updating connectionType
to a value other than "direct".</entry>
</row>
<row>
<entry colname="col1">connectionType</entry>
<entry colname="col2">No</entry>
<entry colname="col3">The connection type corresponds to the options
in the Connection settings page. Valid values include useBrowserSettings,
direct, tls-direct, http-direct, socks4-proxy, socks5-proxy, http-proxy,
and reverse-proxy.</entry>
</row>
<row>
<entry colname="col1">authServerUrl</entry>
<entry colname="col2">No</entry>
<entry colname="col3">The server URL for SSO authentication.</entry>
</row>
<row>
<entry colname="col1">authType</entry>
<entry colname="col2">No</entry>
<entry colname="col3">The authentication type for SSO. Value can either
be <uicontrol>TAM-SPNEGO</uicontrol> or <uicontrol>ST-DOMINO-SSO</uicontrol>.</entry>
</row>
<row>
<entry colname="col1">port</entry>
<entry colname="col2">No</entry>
<entry colname="col3">The port to use if it is not the default 1533.</entry>
</row>
<row>
<entry colname="col1">proxyHost</entry>
<entry colname="col2">No</entry>
<entry colname="col3">The hostname of the proxy.</entry>
</row>
<row>
<entry colname="col1">proxyPort</entry>
<entry colname="col2">No</entry>
<entry colname="col3">The port of the proxy.</entry>
</row>
<row>
<entry colname="col1">loginByToken</entry>
<entry colname="col2">No</entry>
<entry colname="col3">Whether or not to log in by token. Set the value
to "true" to log in by token. Note that if the token login fails and
the password is available, the password-based authentication will
proceed.</entry>
</row>
<row>
<entry colname="col1">sendKeepAlive</entry>
<entry colname="col2">No</entry>
<entry colname="col3">Whether or not to send the keep alive signal.
Set the value to "true" to send the keep alive signal.</entry>
</row>
<row>
<entry colname="col1">keepAliveInterval</entry>
<entry colname="col2">No</entry>
<entry colname="col3">The interval at which to send the keep alive
signal.</entry>
</row>
</tbody>
</tgroup>
</table><table><title>&lt;managed-community-action> attributes</title>
<tgroup cols="3"><colspec colname="col1"/><colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row valign="bottom">
<entry colname="col1">Attribute</entry>
<entry colname="col2">Required?</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1">managed-community-id</entry>
<entry colname="col2">Yes</entry>
<entry colname="col3">The unique ID of the managed-community. Use
the same value as the "host" attribute of the managed community</entry>
</row>
<row>
<entry colname="col1">type</entry>
<entry colname="col2">Yes</entry>
<entry colname="col3">The type of action. Values can be "update",
"add", "delete" or "reset".<ul>
<li>Add actions result in the addition of secondary communities.</li>
<li>Delete actions result in the deletion of secondary communities.
The default community cannot be deleted.</li>
<li>Update actions result in an update to communities whose host value
match the host value of the managed community. If no attributes are
different, the update action does not result in any change. </li>
<li>Reset actions are used to reset the client configuration to a
new default community. If a reset action is found, it is applied before
any other action type and no other actions are processed. The user
is prompted to restart, but may opt not to. The managed community
referenced by the reset action represents the new default community
that is to be used when the user next restarts.</li>
</ul></entry>
</row>
<row>
<entry colname="col1">restart</entry>
<entry colname="col2">No</entry>
<entry colname="col3">By default, update actions only result in a
restart if the host name is changed. Add this optional attribute and
set the value to "true" to restart the client after other update events.
To prevent the default restart after the host name is changed, add
this attribute, but set it to "false."</entry>
</row>
<row>
<entry colname="col1">applyDefaultCommunityUsername</entry>
<entry colname="col2">No</entry>
<entry colname="col3">Attribute that can be used with an "add" type
managed community action to indicate whether or not the default community
user name should be applied to the new community when it is added.
Set the value to "true" apply the default community user name.</entry>
</row>
<row>
<entry colname="col1">createNewConfig</entry>
<entry colname="col2">No</entry>
<entry colname="col3">Optional attribute for use with the reset action
type. When you set this to "true," the previous default community
is completely replaced by the new community. The user name and password
are empty, requiring the user to repopulate these values. Without
this attribute, or with the attribute set to false, the new default
community configuration enabled with a reset action retains the user
name, password, and connection options of the former default community. </entry>
</row>
</tbody>
</tgroup>
</table></section>
<example><title>Sample managed-community-configs file</title><p>The
following sample file adds a new community and updates two others.
The connection type is reverse-proxy.</p><pre>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;managed-communities>
  &lt;managed-community id="sales.usma.example.com" host="sales.usma.example.com" loginByToken="true" authServerUrl="http://sales.usma.example.com" authType="SAMPLE" useGlobalConnSettings="false">
  &lt;connection connectionType="reverse-proxy" proxyHost="http://usma.example.com:81/sales"/>
  &lt;/managed-community>
  &lt;managed-community id="sametime.example.com" host="sametime.example.com" newHost="sametimenew.example.com"/>
  &lt;managed-community id="sametimenew.example.com" host="sametimenew.example.com"/>
  &lt;managed-community-action type="update" managed-community-id="sales.usma.example.com"/>
  &lt;managed-community-action type="update" managed-community-id="sametime.example.com"/>
  &lt;managed-community-action type="add" managed-community-id="sametimenew.example.com"/>
&lt;/managed-communities></pre></example>
<example><title>Action examples</title><p>Adding a new community</p><p>The
following example adds a new secondary community using the global
connection defaults. Administrator-defined secondary communities are
not impacted by the <uicontrol>Allow user to add multiple server communities</uicontrol> policy.
Even if the policy is set to <userinput>Not selected</userinput>,
the client recognizes they are defined by the administrator and allows
the user to log into them. Administrator-defined communities cannot
be deleted.</p><pre>&lt;managed-communities>
&lt;managed-community id="acct.sales.usma.example.com" host="acct.sales.usma.example.com"/>
&lt;managed-community-action type="add" managed-community-id="acct.sales.usma.example.com"/>
&lt;/managed-communities></pre><p>Updating the default community host</p><p>This
example updates the default community host from "sales.usma.example.com"
to "sales2.usma.example.com."</p><pre>&lt;managed-communities>
&lt;managed-community id="sales.usma.example.com" host="sales.usma.example.com" newHost="sales2.usma.example.com"/>
&lt;managed-community-action type="update" managed-community-id="sales.usma.example.com"/>
&lt;/managed-communities></pre><p>Updating the default community host
again</p><p>This example updates the default community host from "sales.usma.example.com"
or "sales2.usma.example.com"  to "sales3.usma.example.com."</p><pre>&lt;managed-communities>
&lt;managed-community id="sales.usma.example.com" host="sales.usma.example.com" newHost="sales3.usma.example.com"/>
&lt;managed-community id="sales2.usma.example.com" host="sales2.usma.example.com" newHost="sales3.usma.example.com"/>
&lt;!-- Ensure existing sales community hosts that missed the first "sales2" update, or that manually reverted, are updated to sales3 -->
&lt;managed-community-action type="update" managed-community-id="sales.usma.example.com"/>
&lt;!-- Ensure existing sales2 community hosts are updated to sales3 -->
&lt;managed-community-action type="update" managed-community-id="sales.usma.example.com"/>
&lt;/managed-communities></pre><p>Updating the secondary community
host</p><p>This example updates "acct" to "acct2" and ensures acct2
is added as a secondary community for all new users.</p><pre>&lt;managed-communities>
&lt;managed-community id="acct2.sales.usma.example.com" host="acct2.sales.usma.example.com" />
&lt;managed-community id="acct.sales.usma.example.com" host="acct.sales.usma.example.com" newHost="acct2.sales.usma.example.com" />
&lt;!-- Ensure acct2.sales.usma.example.com community is created for all users that don't yet have it -->
&lt;managed-community-action type="add" managed-community-id="acct2.sales.usma.example.com"/>
&lt;!-- Ensure existing acct.sales.usma.example.com community hosts are updated to acct2.sales.usma.example.com -->
&lt;managed-community-action type="update" managed-community-id="acct.sales.usma.example.com"/>
&lt;/managed-communities></pre><p>Updating the secondary community
host again</p><p>This example updates "acct2" to "acct3", and also
ensures acct3 is added as a secondary community for all new users.</p><pre>&lt;managed-communities>
&lt;managed-community id="acct3.sales.usma.example.com" host="acct3.sales.usma.example.com"/>
&lt;managed-community id="acct2.sales.usma.example.com" host="acct2.sales.usma.example.com" newHost="acct3.sales.usma.example.com" />
&lt;managed-community id="acct.sales.usma.example.com" host="acct.sales.usma.example.com" newHost="acct3.sales.usma.example.com" />
&lt;!-- Ensure acct3.swg.usma.hcl.com community is created for all new users -->
&lt;managed-community-action type="add" managed-community-id="acct3.sales.usma.example.com"/>
&lt;!-- Ensure existing acct2.sales.usma.hcl.com community hosts are updated to acct3.sales.usma.example.com -->
&lt;managed-community-action type="update" managed-community-id="acct2.sales.usma.example.com"/>
&lt;!-- Ensure existing acct2.sales.usma.example.com community hosts that missed the first "acct2" update, or that manually reverted, are updated to acct3.sales.usma.example.com -->
&lt;managed-community-action type="update" managed-community-id="acct.sales.usma.example.com"/>
&lt;/managed-communities></pre><p>Switching users to a new default
community with a different user directory</p><p>If the new community
is a different community with a different user backend, use the reset
managed-community-action type to reset the user to the new community.
Assuming the user credentials are valid in the new community, after
restarting, the user logs into the new community. To include additional
secondary communities as part of this new configuration, define them
on the new server's <filepath>managed-community-configs.xml</filepath> file,
using add actions for the desired secondary communities.  When the
reset action is found, if the current default community does not match
the community defined by the administrator, or if createNewConfig
is set to <userinput>true</userinput>, the client saves the new configuration
locally. When the client next restarts, the default community defined
by the administrator replaces the previously defined default community.</p><pre>&lt;managed-communities>
&lt;managed-community id="acct.sales.usma.example.com" host="acct.sales.usma.example.com"/>
&lt;managed-community-action type="reset" managed-community-id="acct.sales.usma.example.com"/>
&lt;/managed-communities></pre><p>Consolidating multiple communities
to a single community</p><p>This example consolidates multiple communities
with various hosts into a single community with one host.</p><pre>&lt;managed-communities deleteOverlappingCommunities="true">
&lt;managed-community id="sales1.usma.example.com" host="sales1.usma.example.com" newHost="sales.usma.example.com"/>
&lt;managed-community id="sales2.usma.example.com" host="sales2.usma.example.com" newHost="sales.usma.example.com"/>
&lt;managed-community id="sales3.usma.example.com" host="sales3.usma.example.com" newHost="sales.usma.example.com"/>
&lt;managed-community-action type="update" managed-community-id="sales1.usma.example.com"/>
&lt;managed-community-action type="update" managed-community-id="sales2.usma.example.com"/>
&lt;managed-community-action type="update" managed-community-id="sales3.usma.example.com"/>
&lt;/managed-communities></pre></example>
</refbody>
</reference>
<?Pub *0000016642?>
