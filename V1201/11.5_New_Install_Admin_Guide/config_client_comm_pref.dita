<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<?Pub Sty _display FontColor="red"?><?Pub Inc?>
<concept id="config_client_comm_pref" xml:lang="en-us">
<title>Community preferences</title>
<shortdesc>The following tables list the default community preferences and alternate community
  preferences for the <tm tmtype="reg" trademark="HCL">HCL</tm>
  <tm tmtype="reg" trademark="Sametime">Sametime</tm> Connect Client and <tm tmtype="reg"
   trademark="Sametime">Sametime</tm> Embedded Client for <tm tmtype="reg" trademark="Notes"
   >Notes</tm>.</shortdesc>
<conbody>
<p><table><title>Default Community Preferences - com.ibm.collaboration.realtime.community </title>
<tgroup cols="3"><colspec colname="col1" colwidth="109*" /><colspec colname="col2" colwidth="74*" /><colspec colname="col3" colwidth="107*" />
<thead>
<row valign="bottom">
<entry colname="col1">Attribute</entry>
<entry colname="col2">Variable type</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1">kioskMode</entry>
<entry colname="col2">Boolean</entry>
<entry colname="col3">Kiosk mode allows multiple users to share the same client on the same
computer. If set to true, the client deletes personal information after each user logs out. When
this setting is enabled, the automatic login, password saving, and locally stored contacts list
features are not available because they require the use of personal information.</entry>
</row>
<row>
<entry colname="col1">logoutWhenIdle</entry>
<entry colname="col2">Boolean</entry>
<entry colname="col3">Specifies whether the client should disconnect from the server (and log out
the user) when idle.</entry>
</row>
<row>
<entry colname="col1">logoutWhenIdleOverride</entry>
<entry colname="col2">Boolean</entry>
<entry colname="col3">Provides a mechanism to override the user's logoutWhenIdle setting. If set to
true, then the client will always logout when idle, and the user will not be able to change the
value the Preferences settings.</entry>
</row>
<row>
<entry colname="col1">logoutWhenLocked</entry>
<entry colname="col2">Boolean</entry>
<entry colname="col3">Sets the initial value of whether or not the Embedded client logs out when <tm
         tmtype="reg" trademark="Notes">Notes</tm> is locked (disconnected from the server). This
        preference only applies to new users.</entry>
</row>
<row>
<entry colname="col1">logoutWhenLockedOverride</entry>
<entry colname="col2">Boolean</entry>
<entry colname="col3">Provides a mechanism to override the user's logoutWhenLocked setting. If set
to true, then the client will always logout when locked, and the user will not be able to change the
value in the Preferences settings.</entry>
</row>
<row>
<entry colname="col1">tokenLoginOnly</entry>
<entry colname="col2">Boolean</entry>
<entry colname="col3">Specifies the whether to force login by token for the default community. Takes
        effect the next time that the client connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">host</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Specifies the initial community host value. Takes effect the next time that
the client connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">authServerUrl</entry>
<entry colname="col2">String	</entry>
<entry colname="col3">Specifies the initial authentication server URL value for the default
        community. Takes effect the next time that the client connects to the Community
        Server.</entry>
</row>
<row>
<entry colname="col1">defaultAuthType	</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Specifies the authentication type for the default community. For user name and password authentication, this setting should be left empty. For <tm trademark="Domino" tmtype="reg">Domino</tm> Single Sign-On in the Embedded client, the value should be set to <userinput>ST-DOMINO-SSO</userinput>. For a SAML
authentication community, the value should be set to <userinput>SAML</userinput>. </entry>
</row>
<row>
<entry colname="col1">keepAlive</entry>
<entry colname="col2">Boolean. Default is true.</entry>
<entry colname="col3">The keepAlive feature allows the client remain connected to the <tm
         tmtype="reg" trademark="Sametime">Sametime</tm> Community Server even when the user is
        inactive, so that the user remains logged in to <tm tmtype="reg" trademark="Sametime"
         >Sametime</tm>. In the client, use the <uicontrol>Server</uicontrol> tab of the <menucascade>
         <uicontrol>Preferences</uicontrol>
         <uicontrol>Server Communities</uicontrol>
         <uicontrol><varname>community</varname></uicontrol>
        </menucascade> page to specify how often a keep-alive signal should be sent to the
        server.</entry>
</row>
<row>
<entry colname="col1">keepAliveInterval</entry>
<entry colname="col2">Integer. Default is 60.</entry>
<entry colname="col3">Specifies the initial keep alive interval value for the default community.
Takes effect the next time that the client connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">loginByToken</entry>
<entry colname="col2">Boolean</entry>
<entry colname="col3">If set to true, the client will log in to the community using a token other
        than user name and password pair. For example, the Embedded client can use <tm
         trademark="Domino" tmtype="reg">Domino</tm> Single Sign-On with the LTPA token, and the
        Connect client uses can use the SAML token. Takes effect the next time that the client
        connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">name</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Specifies the initial name for the default community. Takes effect the next
time that the client connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">port</entry>
<entry colname="col2">Integer. Default is 1533.</entry>
<entry colname="col3">Specifies the initial community port value. Takes effect the next time that
the client connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">savePassword</entry>
<entry colname="col2">Boolean. Default is false.</entry>
<entry colname="col3">Specifies whether the user's password is saved for the default community.
Takes effect the next time that the client connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">connectionType</entry>
<entry colname="col2">String. Valid values include direct, tls-direct,
http-direct, socks4-proxy, socks5-proxy, http-proxy, https-proxy,
reverse-proxy, useBrowserSettings.</entry><?Pub Caret -1?>
<entry colname="col3">Specifies the connection protocol that is used when the client connects to the
default community. Takes effect the next time that the client connects to the Community
Server.</entry>
</row>
<row>
<entry colname="col1">proxyHost</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Specifies the host name for the <tm tmtype="reg" trademark="Sametime"
         >Sametime</tm> Proxy Server that browser clients connect to before accessing the Community
        server where the default community is hosted. Takes effect the next time that the client
        connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">proxyPort	</entry>
<entry colname="col2">Integer</entry>
<entry colname="col3">Specifies the port number that listens for browser client connections on the
         <tm tmtype="reg" trademark="Sametime">Sametime</tm> Proxy Server used with the Community
        server where the default community is hosted. Takes effect the next time that the client
        connects to the Community Server</entry>
</row>
<row>
<entry colname="col1">proxyUserName</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Specifies the initial proxy user name for the default community.  Takes effect
the next time that the client connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">proxyPassword</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Specifies the initial proxy password for the default community.  Takes effect
the next time that the client connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">proxyResolvesLocally</entry>
<entry colname="col2">Boolean</entry>
<entry colname="col3">Specifies the initial proxyResolvesLocally value for the default community.
Takes effect the next the time that the client connects to the Community Server.</entry>
</row>
<row>
<entry colname="col1">loginTokenRefreshInterval</entry>
<entry colname="col2">Integer. Default is 900000.</entry>
<entry colname="col3">Specifies the login token refresh interval in
milliseconds. The default is 900000, or 15 minutes. </entry>
</row>
<row>
<entry colname="col1">samlTrustedSites</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Specifies the URL of a trusted site for use with SAML authentication. Example:
<codeph>samlTrustedSites=<varname>url1,url2</varname></codeph>.</entry>
</row>
</tbody>
</tgroup>
</table></p>
<p><table><title>Alternate Community Preferences - com.ibm.collaboration.realtime.community</title>
<tgroup cols="3"><colspec colname="col1" colwidth="109*" /><colspec colname="col2" colwidth="74*" /><colspec colname="col3" colwidth="107*" />
<thead>
<row valign="bottom">
<entry colname="col1">Attribute</entry>
<entry colname="col2">Variable type</entry>
<entry colname="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1">altCommunityConfig.managedIds</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Required. A comma-delimited set of IDs that
represents each alternate community. For example, altCommunityConfig.managedIDs=altHost1,altHost2
defines two alternate communities named altHost1 and altHost 2.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.targetCommunityHost</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Required. The host name of the alternate community. <varname>altHostID</varname> represents
the ID you defined for the alternate community in the managedIds preference,
such as <userinput>altHost1</userinput>.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.enabled</entry>
<entry colname="col2">Boolean. Default is true.</entry>
<entry colname="col3">Enables the alternate community configuration.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.weight</entry>
<entry colname="col2">Integer. Default is 0.</entry>
<entry colname="col3">The weight of the alternate community configuration
relative to other alternate communities. The higher the value, the
greater the weight. For example, a connection to an alternate community
with a weight of 2 is tried before one with a weight of 0. Regardless
of the assigned weight, the client attempts a connection to the last
successful alternate community first.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.type</entry>
<entry colname="col2">String. The default is postDefaultConfig.</entry>
<entry colname="col3">Determines if the alternate community connection
is tried before the default community or after. A value of postDefaultConfig
attempts the connection after trying to connect to the default community.
 A value of preDefaultConfig attempts to connect to the alternate
community first.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.attemptCount</entry>
<entry colname="col2">Integer. The default is 1.</entry>
<entry colname="col3">Sets the number of times the client attempts
to connect to the alternate community before trying another community.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.fallbackOnly</entry>
<entry colname="col2">String</entry>
<entry colname="col3">By default, this preference is not set and the
client attempts a connection to the last successful alternate community
first. If you set the preference fallbackOnly for a specific alternate
community, it will never be retried first, even if it was the last
successful connection.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.host</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Defines a secondary alternate community host
to connect to if the host defined in the targetCommunityHost preference
cannot be reached. For example, if the targetCommunityHost is <userinput>im1.example.com</userinput>,
the host could point to <userinput>im2.example.com</userinput>.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.authServerUrl</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Specifies the server URL for Single Sign-on
authentication.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.authType</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Defines the method used for Single sign-on authentication.
Use <userinput>TAM-SPNEGO</userinput> for SPNEGO authentication or <userinput>ST-DOMINO-SSO</userinput> for <tm tmtype="reg" trademark="Domino">Domino</tm> authentication within <tm tmtype="reg" trademark="Notes">Notes</tm>.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.port</entry>
<entry colname="col2">Integer</entry>
<entry colname="col3">The port to use if other than the default 1533.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.connectionType</entry>
<entry colname="col2">String. Valid values include direct, tls-direct,
http-direct, socks4-proxy, socks5-proxy, http-proxy, https-proxy,
reverse-proxy.</entry>
<entry colname="col3">Determines how the client connects to the alternate
community. The default is <uicontrol>direct</uicontrol>.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.proxyHost</entry>
<entry colname="col2">String</entry>
<entry colname="col3">Specifies the initial proxy host value for the
alternate community. </entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.proxyPort</entry>
<entry colname="col2">Integer</entry>
<entry colname="col3">The port of the proxy.</entry>
</row>
<row>
<entry colname="col1">altCommunityConfig.altHost.<varname>altHostID</varname>.loginByToken</entry>
<entry colname="col2">Boolean</entry>
<entry colname="col3">Determines if the client logs in by token. If
the token login fails and the password is available, the client attempts
password-based authentication instead.</entry>
</row>
<row>
<entry colname="col1">tryLastSuccesfulConfigFirst</entry>
<entry colname="col2">Boolean. Default is true.</entry>
<entry colname="col3">Determines if the client first tries the alternate
community it last connected to successfully. If you change the value
to false, the client always attempts Connections to the alternate
communities in the default priority order set in the managedIDs list,
regardless of which alternate community connection was successful
last.</entry>
</row>
</tbody>
</tgroup>
</table></p>
</conbody>

</concept>
