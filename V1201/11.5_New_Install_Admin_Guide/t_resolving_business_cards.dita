<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_resolving_business_cards">
    <title>Resolving problems with business cards</title>
    <shortdesc>If business cards are not displaying user information as expected, first check the
        server configuration, then the client, and finally, the business cards
        themselves.</shortdesc>
    <taskbody>
        <context id="context_vdx_211_ptb">
            <p>To check the server configuration, verify that the storage repository, such as LDAP
                used with the Sametime server is configured correctly. A configuration problem is
                the most likely cause of problems with business cards. For more information, see
                    <xref href="admin_st_buscard.dita">Setting up business cards</xref>.</p>
            <p>If the configuration is correct, next verify that the business card information on
                requested from the clients is working correctly. For this, trace the UserInfo
                servlet flows to verify that the UserInfo servlet is working correctly. The
                UserInfo servlet  runs on the server retrieves business card information on request
                from clients and responds to client requests.  To determine if there are errors on
                the exchange of information, enable the UserInfo Debug trace.</p>
            <p>If the UserInfo servlet on the server is responding correctly, enable client-side
                tracing to determine what is happening on the client. Follow the instructions in
                    <xref href="t_logging_tracing.dita" format="dita" scope="local"/>. For Web
                clients, review the Proxy service logs and capture a browser HTTP Archive (HAR) file
                to review the business card information received. </p>
        </context>
    </taskbody>
    <task id="task_cmx_2pp_r5b">
        <title>Enabling the UserInfo Debug trace on Docker</title>
        <taskbody>
            <steps id="steps_kvx_fpp_r5b">
                <step>
                    <cmd>If a <filepath>debug.env</filepath> doesn't exist in the directory where
                        the installation package was decompress, you must create it.</cmd>
                </step>
                <step>
                    <cmd>Add the following line to the <filepath>debug.env</filepath> file.</cmd>
                    <info>
                        <codeblock id="codeblock_plt_jpp_r5b">STI__debug__USERINFO_DEBUG_LEVEL=5 </codeblock>
                    </info>
                </step>
                <step>
                    <cmd>Add the <filepath>debug.env</filepath> in the community section of the
                            <filepath>docker_compose.yaml</filepath> file.</cmd>
                    <info><image href="Images/troubleshoot_businesscard.png" id="image_nwb_wvq_r5b"
                        /></info>
                </step>
                <step>
                    <cmd>Save the file.</cmd>
                </step>
                <step>
                    <cmd>Start the Sametime server to apply the changes and enable the trace.</cmd>
                    <info>
                        <codeblock id="codeblock_jck_klq_r5b">docker-compose up -d</codeblock>
                    </info>
                </step>
            </steps>
        </taskbody>
    </task>
    <task id="task_ufj_rpp_r5b">
        <title>Enabling the UserInfo Debug trace on Kubernetes</title>
        <taskbody>
            <steps id="steps_vfj_rpp_r5b">
                <step>
                    <cmd> Edit the <filepath>values.yaml</filepath> file, changing the
                            <codeph>enableCommunityDebug</codeph> property from false to true. Save
                        this change. </cmd>
                </step>
                <step>
                    <cmd>Edit <filepath>sameteime-community-logging ConfigMap</filepath>, and add
                        the following line to the data section. </cmd>
                    <info><codeblock id="codeblock_cpg_fqp_r5b">STI__debug__USERINFO_DEBUG_LEVEL: "5"</codeblock>For
                        example:
                        <codeblock id="codeblock_dpg_fqp_r5b">kubectl edit cm sametime-community-logging</codeblock></info>
                </step>
                <step
                    conref="securing_ldap_kubernetes.dita#securing_ldap_kubernetes/apply_changes_helmupgrade">
                    <cmd/>
                </step>
                <step conref="pod_apply_changes.dita#pod_apply_changes/scale_pod">
                    <cmd/>
                </step>
            </steps>
        </taskbody>
    </task>
</task>
